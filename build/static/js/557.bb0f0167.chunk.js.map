{"version":3,"file":"static/js/557.bb0f0167.chunk.js","mappings":"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","sources":["pages/mathlearningpath.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Box,\n  Button,\n  Typography,\n  Container,\n  Stack,\n  Divider,\n  Grid,\n} from \"@mui/material\";\nimport { motion } from \"framer-motion\";\nimport theme from \"./website-constants/Theme.jsx\";\nimport { FormControl, TextField } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"./website-constants/NavBarLoggedIn.jsx\";\nimport ImgText from \"./cardTemplates/ImageText.jsx\";\nimport LeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport RightIcon from \"@mui/icons-material/ChevronRight\";\nimport McqCard from \"./cardTemplates/mcq.jsx\";\nimport TextImg from \"./cardTemplates/TextImage.jsx\";\nimport FillInBlank from \"./cardTemplates/fillinblank.jsx\";\nimport { useParams } from \"react-router-dom\";\nimport Intro from \"./cardTemplates/intro.jsx\";\nimport Conclusion from \"./cardTemplates/conclusion.jsx\";\nimport VideoCard from \"./cardTemplates/videoCard.jsx\";\nimport TextCard from \"./cardTemplates/Text.jsx\";\nimport ImageCard from \"./cardTemplates/ImageCard.jsx\";\n\nconst HolderGrid = styled(Grid)`\n  && {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n    padding-bottom: 3rem;\n    padding-top: 3rem;\n  }\n`;\n\nconst CardHolder = styled(Grid)`\n  && {\n    display: flex;\n    justify-content: center;\n    padding: 1.5vw;\n    height: 90vh;\n    width: 90vw;\n    ${\"\" /* background: linear-gradient(to right top, #535EAB, #8351C2); */}\n    ${\"\" /* background: linear-gradient(to right top, #99a4f1, #c997f4); */}\n    border-radius: 2rem;\n    ${\"\" /* border: 1px solid grey; */}\n    box-shadow: 0px 0px 5rem grey;\n    overflow-y: scroll;\n    scrollbar-width: none;\n    -ms-overflow-style: none;\n    &::-webkit-scrollbar {\n      display: none;\n    }\n    &::-webkit-scrollbar-track {\n      background-color: #f1f1f1;\n    }\n\n    &::-webkit-scrollbar-thumb {\n      background-color: #888;\n      border-radius: 4px;\n    }\n\n    &::-webkit-scrollbar-thumb:hover {\n      background-color: #555;\n    }\n  }\n`;\n\nconst CardWrapper = styled.div`\n  /* Your other styles */\n  opacity: ${(props) => (props.fadeOut ? 0 : 1)};\n  transition: opacity 0.3s ease-in-out;\n`;\n\nconst BigGrid = styled(Grid)`\n  && {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 4rem 2rem 2rem 2rem;\n    width: 100%;\n  }\n`;\n\nconst ChevronButton = styled(Button)`\n  && {\n    width: 1rem;\n    height: 3rem;\n    align-self: center;\n  }\n`;\n\nfunction BioLearningPath() {\n  const { lessonid } = useParams();\n  const [cardNum, setCardNum] = useState(-1);\n  const [lessonList, setLessonList] = useState([]);\n  const navigate = useNavigate();\n  const [trigger, setTrigger] = useState(false);\n  const [fadeOut, setFadeOut] = useState(false);\n\n  useEffect(() => {\n    const fetchAllLessons = async () => {\n      try {\n        const res = await axios.get(\"/api/mathcards\",\n        {\n          withCredentials: true,\n          credentials: \"include\",\n        });\n        const lessons = res.data;\n        setLessonList(lessons);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchAllLessons();\n  }, []);\n\n  if (!lessonList || lessonList.length === 0) {\n    return;\n  }\n\n  const lesson = lessonList[lessonid - 1];\n\n  const handleNextClick = () => {\n    if (cardNum < lesson.length) {\n      setFadeOut(true);\n      setTimeout(() => {\n        setCardNum(cardNum + 1);\n        setFadeOut(false); // Reset the fade-out state\n      }, 300);\n    } else if (lessonid < lessonList.length) {\n      const newIndex = Number(lessonid) + 1;\n      navigate(\"/engineering/\" + newIndex);\n      window.location.reload(false);\n    }\n  };\n  const handleBackClick = (e) => {\n    if (cardNum > -1) {\n      setFadeOut(true);\n      setTimeout(() => {\n        setCardNum(cardNum - 1);\n        setFadeOut(false); // Reset the fade-out state\n      }, 300);\n    } else if (lessonid > 1) {\n      const newIndex = Number(lessonid) - 1;\n      navigate(\"/engineering/\" + newIndex);\n      window.location.reload(false);\n    }\n  };\n\n  const renderCard = () => {\n    if (cardNum > -1 && cardNum < lesson.length) {\n      const currentCard = lesson[cardNum];\n      if (currentCard.card_type === \"MCQ\") {\n        return <McqCard key={cardNum} question={currentCard}></McqCard>;\n      } else if (currentCard.card_type === \"FRQ\") {\n        return <FillInBlank key={cardNum} question={currentCard}></FillInBlank>;\n      } else if (currentCard.card_type === \"ImgText\") {\n        return <ImgText key={cardNum} displayInfo={currentCard}></ImgText>;\n      } else if (currentCard.card_type === \"TextImg\") {\n        return <TextImg key={cardNum} displayInfo={currentCard}></TextImg>;\n      } else if (currentCard.card_type === \"Video\") {\n        return <VideoCard key={cardNum} displayInfo={currentCard}></VideoCard>;\n      } else if (currentCard.card_type === \"Text\") {\n        return <TextCard key={cardNum} displayInfo={currentCard}></TextCard>;\n      } else if (currentCard.card_type === \"Image\") {\n        return <ImageCard key={cardNum} displayInfo={currentCard}></ImageCard>;\n      }\n      return \"Card Rendering Error\";\n    } else if (cardNum === -1) {\n      return <Intro lessonIndex={lessonid} course=\"math\"></Intro>;\n    } else if (cardNum === lesson.length) {\n      return <Conclusion lessonIndex={lessonid} course=\"math\"></Conclusion>;\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme} key=\"mthlearningpath-1\">\n      <NavBar key=\"mthlearningpath-2\" />\n      <BigGrid key=\"mthlearningpath-3\">\n        <ChevronButton\n          key=\"mthlearningpath-4\"\n          onClick={handleBackClick}\n          disable=\"true\"\n          sx={{ marginRight: \"2rem\", display: { xs: \"none\", md: \"flex\" } }}\n        >\n          <LeftIcon\n            style={{ color: \"white\", fontSize: \"3rem\" }}\n            key=\"mthlearningpath-5\"\n          />\n        </ChevronButton>\n        <CardHolder\n          key=\"mthlearningpath-6\"\n          item\n          sm={12}\n          xs={12}\n          sx={{\n            alignItems: {\n              xs:\n                cardNum <= -1 || cardNum === lesson.length\n                  ? \"center\"\n                  : \"flex-start\",\n              md: \"center\",\n            },\n          }}\n        >\n          <CardWrapper key=\"mthlearningpath-7\" fadeOut={fadeOut}>\n            {renderCard()}\n          </CardWrapper>\n        </CardHolder>\n        <ChevronButton\n          key=\"mthlearningpath-8\"\n          onClick={handleNextClick}\n          disable=\"true\"\n          sx={{ marginLeft: \"2rem\", display: { xs: \"none\", md: \"flex\" } }}\n        >\n          <RightIcon\n            key=\"mthlearningpath-9\"\n            style={{ color: \"white\", fontSize: \"3rem\" }}\n          />\n        </ChevronButton>\n      </BigGrid>\n      <Container\n        key=\"mthlearningpath-10\"\n        sx={{\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          display: \"flex\",\n          padding: \"0rem 0rem 3rem 0rem\",\n          visibility: { xs: \"visible\", md: \"hidden\" },\n        }}\n      >\n        <ChevronButton\n          key=\"mthlearningpath-11\"\n          onClick={handleBackClick}\n          disable=\"true\"\n          sx={{ marginRight: \"2rem\" }}\n        >\n          <LeftIcon\n            style={{ color: \"white\", fontSize: \"3rem\" }}\n            key=\"mthlearningpath-12\"\n          />\n        </ChevronButton>\n        <ChevronButton\n          key=\"mthlearningpath-13\"\n          onClick={handleNextClick}\n          disable=\"true\"\n          sx={{ marginLeft: \"2rem\" }}\n        >\n          <RightIcon\n            style={{ color: \"white\", fontSize: \"3rem\" }}\n            key=\"mthlearningpath-14\"\n          />\n        </ChevronButton>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default BioLearningPath;\n"],"names":["CardHolder","styled","Grid","_templateObject","_taggedTemplateLiteral","_templateObject2","CardWrapper","div","_templateObject3","props","fadeOut","BigGrid","_templateObject4","ChevronButton","Button","_templateObject5","lessonid","useParams","_useState","useState","_useState2","_slicedToArray","cardNum","setCardNum","_useState3","_useState4","lessonList","setLessonList","navigate","useNavigate","_useState5","_useState6","_useState7","_useState8","setFadeOut","useEffect","fetchAllLessons","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","lessons","wrap","_context","prev","next","axios","get","withCredentials","credentials","sent","data","t0","console","log","stop","apply","arguments","length","lesson","handleNextClick","setTimeout","newIndex","Number","window","location","reload","handleBackClick","e","_jsxs","ThemeProvider","theme","children","_jsx","NavBar","onClick","disable","sx","marginRight","display","xs","md","LeftIcon","style","color","fontSize","item","sm","alignItems","currentCard","card_type","McqCard","question","FillInBlank","ImgText","displayInfo","TextImg","VideoCard","TextCard","ImageCard","Intro","lessonIndex","course","Conclusion","renderCard","marginLeft","RightIcon","Container","justifyContent","padding","visibility"],"sourceRoot":""}